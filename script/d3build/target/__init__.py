# Copyright 2014 Dietrich Epp.
# This file is part of SGLib.  SGLib is licensed under the terms of the
# 2-clause BSD license.  For more information, see LICENSE.txt.
import os

NOTICE = 'This file automatically generated by the build system'

class GeneratedSource(object):
    __slots__ = []

    @property
    def _binary(self):
        return False

    @property
    def is_regenerated_always(self):
        return False

    @property
    def is_regenerated_only(self):
        return False

    @property
    def dependencies(self):
        return ()

    @property
    def target(self):
        raise NotImplementedError('must be implemented by subclass')

    def regen(self):
        """Regenerate the file."""
        mode = 'wb' if self._binary else 'w'
        try:
            with open(self.target + '.tmp', mode) as fp:
                self.write(fp)
            os.rename(self.target + '.tmp', self.target)
        except:
            try:
                os.remove(self.target + '.tmp')
            except FileNotFoundError:
                pass
            raise
